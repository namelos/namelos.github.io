{"version":3,"sources":["webpack:///path---sicp-3-3-ab0bc692f9962e1189ec.js","webpack:///./.cache/json/sicp-3-3.json"],"names":["webpackJsonp","240","module","exports","data","orga","html","meta","title","date","downloaded","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,KAAA,2gLAA2oLC,MAAuFC,MAAA,sCAAAC,KAAA,aAAAC,YAAA,oaAAmfC,aAAgBC,KAAA","file":"path---sicp-3-3-ab0bc692f9962e1189ec.js","sourcesContent":["webpackJsonp([170072518859038],{\n\n/***/ 240:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"orga\":{\"html\":\"<div><code>cons</code>, <code>car</code>, and <code>cdr</code> can be used to construct list. However they are incapable of modifying list structure.</div><div><figure><img src=\\\"/static/ch3-Z-G-13_2018-10-12_16-02-54-b7954d2cacf5f177c875c9e30dbc6e6f.gif\\\"></figure> <strong>Figure 3.12</strong>: Lists x: ((a b) c d) and y: (e f).</div><div><figure><img src=\\\"/static/ch3-Z-G-14_2018-10-12_16-23-55-e325ccbb1871f03e9df7d11cd3c3a82c.gif\\\"></figure> Effect of (set-car! x y) on the lists in figure 3.12</div><div><figure><img src=\\\"/static/ch3-Z-G-15_2018-10-12_16-24-30-6e95671f145022dcd474afbc8a2ac92b.gif\\\"></figure> Effect of (define z (cons y (cdr x))) on the lists in figure 3.12</div><div><figure><img src=\\\"/static/ch3-Z-G-16_2018-10-12_16-25-29-af184b674cc1d13d9a224726e924a4c7.gif\\\"></figure> Effect of (set-cdr! x y) on the lists in figure 3.12</div><div class=\\\"section\\\"><h1>Exercise 3.12</h1><div>The following procedure for appending lists was introduced in section 2.2.1:</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span> x y<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">null?</span> x<span class=\\\"token punctuation\\\">)</span>\\n      y\\n      <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cons</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">car</span> x<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre><div>Append forms a new list by successively consing the elements of x onto y. The procedure append! is similar to append, but it is a mutator rather than a constructor. It appends the lists by splicing them together, modifying the final pair of x so that its cdr is now y. (It is an error to call append! with an empty x.)</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span>! x y<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">set-cdr!</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">last-pair</span> x<span class=\\\"token punctuation\\\">)</span> y<span class=\\\"token punctuation\\\">)</span>\\n  x<span class=\\\"token punctuation\\\">)</span></code></pre><div>Here <code>last-pair</code> is a procedure that returns the last pair in its argument:</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">last-pair</span> x<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">null?</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      x\\n      <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">last-pair</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre><div>Consider the interaction</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> x <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">list</span> <span class=\\\"token string\\\">'a</span> <span class=\\\"token string\\\">'b))</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> y <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">list</span> <span class=\\\"token string\\\">'c</span> <span class=\\\"token string\\\">'d))</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> z <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span> x y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\nz\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">a</span> b c d<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span>\\n&lt;response>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> w <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span>! x y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\nw\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">a</span> b c d<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span>\\n&lt;response></code></pre><div>What are the missing &#x3C;response>s? Draw box-and-pointer diagrams to explain your answer.</div></div>\",\"meta\":{\"title\":\"SICP 3.3 Modeling with Mutable Data\",\"date\":\"2018-10-09\",\"downloaded\":[\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-13.gif @ 2018-10-12 16:02:54\",\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-14.gif @ 2018-10-12 16:23:55\",\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-15.gif @ 2018-10-12 16:24:30\",\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-16.gif @ 2018-10-12 16:25:29\"]}}},\"pathContext\":{\"slug\":\"/sicp-3.3/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---sicp-3-3-ab0bc692f9962e1189ec.js","module.exports = {\"data\":{\"orga\":{\"html\":\"<div><code>cons</code>, <code>car</code>, and <code>cdr</code> can be used to construct list. However they are incapable of modifying list structure.</div><div><figure><img src=\\\"/static/ch3-Z-G-13_2018-10-12_16-02-54-b7954d2cacf5f177c875c9e30dbc6e6f.gif\\\"></figure> <strong>Figure 3.12</strong>: Lists x: ((a b) c d) and y: (e f).</div><div><figure><img src=\\\"/static/ch3-Z-G-14_2018-10-12_16-23-55-e325ccbb1871f03e9df7d11cd3c3a82c.gif\\\"></figure> Effect of (set-car! x y) on the lists in figure 3.12</div><div><figure><img src=\\\"/static/ch3-Z-G-15_2018-10-12_16-24-30-6e95671f145022dcd474afbc8a2ac92b.gif\\\"></figure> Effect of (define z (cons y (cdr x))) on the lists in figure 3.12</div><div><figure><img src=\\\"/static/ch3-Z-G-16_2018-10-12_16-25-29-af184b674cc1d13d9a224726e924a4c7.gif\\\"></figure> Effect of (set-cdr! x y) on the lists in figure 3.12</div><div class=\\\"section\\\"><h1>Exercise 3.12</h1><div>The following procedure for appending lists was introduced in section 2.2.1:</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span> x y<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">null?</span> x<span class=\\\"token punctuation\\\">)</span>\\n      y\\n      <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cons</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">car</span> x<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre><div>Append forms a new list by successively consing the elements of x onto y. The procedure append! is similar to append, but it is a mutator rather than a constructor. It appends the lists by splicing them together, modifying the final pair of x so that its cdr is now y. (It is an error to call append! with an empty x.)</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span>! x y<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">set-cdr!</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">last-pair</span> x<span class=\\\"token punctuation\\\">)</span> y<span class=\\\"token punctuation\\\">)</span>\\n  x<span class=\\\"token punctuation\\\">)</span></code></pre><div>Here <code>last-pair</code> is a procedure that returns the last pair in its argument:</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">last-pair</span> x<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">null?</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      x\\n      <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">last-pair</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre><div>Consider the interaction</div><pre><code class=\\\"language-scheme\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> x <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">list</span> <span class=\\\"token string\\\">'a</span> <span class=\\\"token string\\\">'b))</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> y <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">list</span> <span class=\\\"token string\\\">'c</span> <span class=\\\"token string\\\">'d))</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> z <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span> x y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\nz\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">a</span> b c d<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span>\\n&lt;response>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">define</span> w <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">append</span>! x y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\nw\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">a</span> b c d<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">cdr</span> x<span class=\\\"token punctuation\\\">)</span>\\n&lt;response></code></pre><div>What are the missing &#x3C;response>s? Draw box-and-pointer diagrams to explain your answer.</div></div>\",\"meta\":{\"title\":\"SICP 3.3 Modeling with Mutable Data\",\"date\":\"2018-10-09\",\"downloaded\":[\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-13.gif @ 2018-10-12 16:02:54\",\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-14.gif @ 2018-10-12 16:23:55\",\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-15.gif @ 2018-10-12 16:24:30\",\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/ch3-Z-G-16.gif @ 2018-10-12 16:25:29\"]}}},\"pathContext\":{\"slug\":\"/sicp-3.3/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/sicp-3-3.json\n// module id = 240\n// module chunks = 170072518859038"],"sourceRoot":""}